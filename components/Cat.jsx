// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useEffect, useRef } from 'react';
// import { useGLTF, useAnimations } from '@react-three/drei';
// import { angleToRadians } from '../utils/angle';
// import gsap from 'gsap';

// export function Cat(props) {
//   const group = useRef();
//   const { nodes, materials, animations } = useGLTF('./models/cat2.glb');
//   const { actions } = useAnimations(animations, group);

//   const catRef = useRef(null);

//   useEffect(() => {
//     console.log(actions);
//     actions?.cat01?.play();
//   });

//   useEffect(() => {
//     if (!!catRef.current) {
//       gsap.to(catRef.current.position, {
//         y: 10,
//         duration: 2,
//         ease: 'power2.out',
//       });
//     }
//   }, [catRef.current]);
//   return (
//     <group
//       ref={catRef}
//       {...props}
//       dispose={null}
//       rotation={[0, angleToRadians(210), 0]}
//     >
//       <group name='Scene'>
//         <mesh
//           name='CAT_01'
//           castShadow
//           receiveShadow
//           geometry={nodes.CAT_01.geometry}
//           material={materials['13 - Default.001']}
//           position={[-20, -36.3, -33]}
//           rotation={[Math.PI, 7, Math.PI]}
//           scale={2}
//         />
//       </group>
//     </group>
//   );
// }

// useGLTF.preload('./models/cat2.glb');

// export default Cat;

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

export function Cat(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('./models/cat2.glb');
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    console.log(actions);
    actions?.cat?.play();
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Scene'>
        <group
          name='Armature'
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.25}
          position={[35, -36.3, 18]}
        >
          <primitive object={nodes.Bip_01} />
          <skinnedMesh
            name='CAT_01'
            geometry={nodes.CAT_01.geometry}
            material={materials['13 - Default']}
            skeleton={nodes.CAT_01.skeleton}
          />
          <skinnedMesh
            name='CAT_01001'
            geometry={nodes.CAT_01001.geometry}
            material={materials.Material}
            skeleton={nodes.CAT_01001.skeleton}
          />
          <skinnedMesh
            name='CAT_01002'
            geometry={nodes.CAT_01002.geometry}
            material={materials.Material}
            skeleton={nodes.CAT_01002.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('./models/cat2.glb');
export default Cat;
